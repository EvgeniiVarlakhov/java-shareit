CREATE TABLE IF NOT EXISTS users (
id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
user_name VARCHAR(255) NOT NULL,
email VARCHAR(512) NOT NULL,
CONSTRAINT users_pk PRIMARY KEY (id),
CONSTRAINT uq_users_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS items (
id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
item_name varchar(255) NOT NULL,
description varchar(512) NOT NULL,
available bool NOT NULL,
owner_id int NOT NULL,
request_id varchar(255),
CONSTRAINT items_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS bookings (
 id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
 start_date timestamp without time zone NOT NULL,
 end_date timestamp without time zone NOT NULL,
 item_id integer NOT NULL,
 booker_id integer NOT NULL,
 status varchar(255) not null,
 CONSTRAINT bookings_pk PRIMARY KEY (id),
 CONSTRAINT fk_item_id FOREIGN KEY (item_id) references items (id),
 CONSTRAINT fk_booker_id FOREIGN KEY (booker_id) references users (id),
 CONSTRAINT cont_date CHECK ( end_date > bookings.start_date )
);

CREATE TABLE IF NOT EXISTS requests (
 id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
 description varchar(255) NOT NULL,
 requestor_id integer NOT NULL,
 CONSTRAINT pk_request_id PRIMARY KEY (id),
 CONSTRAINT fk_requestor_id foreign key (requestor_id) references users (id)
);

CREATE TABLE IF NOT EXISTS comments (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text_comment varchar (455) NOT NULL,
    item_id INTEGER NOT NULL,
    author_id INTEGER NOT NULL,
    created_time timestamp without time zone NOT NULL,
    CONSTRAINT pk_comments_id PRIMARY KEY (id),
    CONSTRAINT fk_item_id FOREIGN KEY (item_id) REFERENCES items (id),
    CONSTRAINT fk_author_id FOREIGN KEY (author_id) REFERENCES users (id)
)